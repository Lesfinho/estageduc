{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HAHAHAHA\\\\Desktop\\\\estageduc\\\\estagiarios-platform\\\\frontend\\\\src\\\\hooks\\\\useAuth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Verifica se há token salvo\n    const token = localStorage.getItem('token');\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      // Busca informações do usuário\n      fetchUserInfo();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchUserInfo = async () => {\n    try {\n      const response = await api.get('/users/me');\n      setUser(response.data);\n    } catch (error) {\n      localStorage.removeItem('token');\n      delete api.defaults.headers.common['Authorization'];\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      const {\n        access_token\n      } = response.data;\n      localStorage.setItem('token', access_token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      await fetchUserInfo();\n    } catch (error) {\n      throw new Error('Email ou senha incorretos');\n    }\n  };\n  const register = async (email, username, fullName, password) => {\n    try {\n      const response = await api.post('/auth/register', {\n        email,\n        username,\n        full_name: fullName,\n        password\n      });\n      const {\n        access_token\n      } = response.data;\n      localStorage.setItem('token', access_token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      await fetchUserInfo();\n    } catch (error) {\n      throw new Error('Erro ao criar conta');\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","api","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","defaults","headers","common","fetchUserInfo","response","get","data","error","removeItem","login","email","password","post","access_token","setItem","Error","register","username","fullName","full_name","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/HAHAHAHA/Desktop/estageduc/estagiarios-platform/frontend/src/hooks/useAuth.tsx"],"sourcesContent":["import React, { useState, useEffect, createContext, useContext } from 'react';\r\nimport { api } from '../services/api';\r\n\r\ninterface User {\r\n  id: number;\r\n  email: string;\r\n  username: string;\r\n  full_name: string;\r\n  created_at?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (email: string, username: string, fullName: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Verifica se há token salvo\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      // Busca informações do usuário\r\n      fetchUserInfo();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const fetchUserInfo = async () => {\r\n    try {\r\n      const response = await api.get('/users/me');\r\n      setUser(response.data);\r\n    } catch (error) {\r\n      localStorage.removeItem('token');\r\n      delete api.defaults.headers.common['Authorization'];\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      const response = await api.post('/auth/login', { email, password });\r\n      const { access_token } = response.data;\r\n      \r\n      localStorage.setItem('token', access_token);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\r\n      \r\n      await fetchUserInfo();\r\n    } catch (error) {\r\n      throw new Error('Email ou senha incorretos');\r\n    }\r\n  };\r\n\r\n  const register = async (email: string, username: string, fullName: string, password: string) => {\r\n    try {\r\n      const response = await api.post('/auth/register', { \r\n        email, \r\n        username, \r\n        full_name: fullName, \r\n        password \r\n      });\r\n      const { access_token } = response.data;\r\n      \r\n      localStorage.setItem('token', access_token);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\r\n      \r\n      await fetchUserInfo();\r\n    } catch (error) {\r\n      throw new Error('Erro ao criar conta');\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    delete api.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}